version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    command: redis-server
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    networks:
      - one-node

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
    ports:
      - "8080:8080"
    volumes:
      - ./build/libs:/app  # 최신 빌드 JAR 매핑
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 1024M
        reservations:
          memory: 1024M
    networks:
      - one-node

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - one-node

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - one-node-grafana-data:/var/lib/grafana
    networks:
      - one-node

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - one-node




networks:
  one-node:
    driver: bridge

volumes:
  one-node-grafana-data:
    driver: local