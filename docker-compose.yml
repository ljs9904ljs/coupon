version: '3'
services:
  redis-node-1:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    command: redis-server --port 7001 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7001:7001"
    networks:
      - redis-cluster

  redis-node-2:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    command: redis-server --port 7002 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7002:7002"
    networks:
      - redis-cluster

  redis-node-3:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    command: redis-server --port 7003 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7003:7003"
    networks:
      - redis-cluster

  redis-node-4:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    command: redis-server --port 7004 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7004:7004"
    networks:
      - redis-cluster

  redis-node-5:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    command: redis-server --port 7005 --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly yes
    ports:
      - "7005:7005"
    networks:
      - redis-cluster

  redis-cluster-creator:
    image: redis:7-alpine
    command: redis-cli --cluster create redis-node-1:7001 redis-node-2:7002 redis-node-3:7003 redis-node-4:7004 redis-node-5:7005 --cluster-yes
    # command: redis-cli --cluster create 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-yes
    depends_on:
      - redis-node-1
      - redis-node-2
      - redis-node-3
      - redis-node-4
      - redis-node-5
    networks:
      - redis-cluster

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./build/libs:/app  # 최신 빌드 JAR 매핑
    depends_on:
      - redis-cluster-creator
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 1024M
        reservations:
          memory: 1024M
    networks:
      - redis-cluster

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - redis-cluster

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - redis-cluster

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - redis-cluster

networks:
  redis-cluster:
    driver: bridge

volumes:
  grafana-data:
    driver: local