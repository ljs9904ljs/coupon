version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    command: redis-server --save "" --appendonly no
    restart: always
    deploy:
      resources:
        limits:
          cpus: '0.01'
          memory: 128M
        reservations:
          memory: 128M
    networks:
      - one-node

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
    ports:
      - "8080:8080"
    volumes:
      - ./build/libs:/app  # 최신 빌드 JAR 매핑
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 1024M
        reservations:
          memory: 1024M
    networks:
      - one-node
  
  fastapi:
    build: ./python-client
    ports:
      - "7000:7000"
    volumes:
      - ./python-client/app:/code/app
    environment:
      - PYTHONUNBUFFERED=1
    networks:
      - one-node

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    networks:
      - one-node

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - one-node-grafana-data:/var/lib/grafana
    networks:
      - one-node

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - one-node

  kafka1:
    image: confluentinc/cp-kafka:latest
    hostname: kafka1
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_NODE_ID: 1
      CLUSTER_ID: w0wnNKUHSYCQXMA3vxB4bA
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9095,3@kafka3:9097"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_MODE: "true"
#    volumes:
#      - ./kafka-entrypoint.sh:/usr/local/bin/kafka-entrypoint.sh
#    entrypoint: ["/bin/bash", "/usr/local/bin/kafka-entrypoint.sh"]
    networks:
      - one-node

  kafka2:
    image: confluentinc/cp-kafka:latest
    hostname: kafka2
    ports:
      - "9094:9094"
      - "9095:9095"
    environment:
      KAFKA_NODE_ID: 2
      CLUSTER_ID: w0wnNKUHSYCQXMA3vxB4bA
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9095,3@kafka3:9097"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094,CONTROLLER://0.0.0.0:9095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_MODE: "true"
#    volumes:
#      - ./kafka-entrypoint.sh:/usr/local/bin/kafka-entrypoint.sh
#    entrypoint: ["/bin/bash", "/usr/local/bin/kafka-entrypoint.sh"]
    networks:
      - one-node

  kafka3:
    image: confluentinc/cp-kafka:latest
    hostname: kafka3
    ports:
      - "9096:9096"
      - "9097:9097"
    environment:
      KAFKA_NODE_ID: 3
      CLUSTER_ID: w0wnNKUHSYCQXMA3vxB4bA
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka1:9093,2@kafka2:9095,3@kafka3:9097"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9096,CONTROLLER://0.0.0.0:9097
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_KRAFT_MODE: "true"
#    volumes:
#      - ./kafka-entrypoint.sh:/usr/local/bin/kafka-entrypoint.sh
#    entrypoint: ["/bin/bash", "/usr/local/bin/kafka-entrypoint.sh"]
    networks:
      - one-node


networks:
  one-node:
    driver: bridge

volumes:
  one-node-grafana-data:
    driver: local